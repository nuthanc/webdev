{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","email","name","id","className","src","alt","CardList","robots","map","user","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","border","children","App","state","searchfield","event","setState","target","value","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCOCQ,EAZF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,GAAMG,IAAI,UAC5C,gCACE,6BAAKJ,IACL,4BAAID,WCGGM,EARE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BACGA,EAAOC,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAoBP,GAAIO,EAAKP,GAAID,KAAMQ,EAAKR,KAAMD,MAAOS,EAAKT,OAAnDS,EAAKP,UCS7BQ,EAbG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAClB,OACE,qBAAKR,UAAU,MAAf,SACE,uBACES,KAAK,SACLC,YAAY,gBACZV,UAAU,mCACVW,SAAUH,O,MCCHI,MARf,SAAgBC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,QAASC,OAAQ,mBAA3D,SACGJ,EAAMK,YCsCEC,E,4MAnCbC,MAAQ,CACNhB,OAAQ,GACRiB,YAAa,I,EASfb,eAAiB,SAACc,GAChB,EAAKC,SAAS,CAACF,YAAaC,EAAME,OAAOC,S,uDAP3C,WAAqB,IAAD,OAClBC,MAAM,8CACLpC,MAAK,SAACqC,GAAD,OAAcA,EAASC,UAC5BtC,MAAK,SAACuC,GAAD,OAAW,EAAKN,SAAS,CAACnB,OAAQyB,S,oBAO1C,WAAU,IAAD,EACyBC,KAAKV,MAA7BhB,EADD,EACCA,OAAQiB,EADT,EACSA,YACVU,EAAiB3B,EAAO4B,QAAO,SAACC,GAAD,OACnCA,EAAMnC,KAAKoC,cAAcC,SAASd,EAAYa,kBAEhD,OAAK9B,EAAOgC,OAIV,sBAAKpC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,eAAgBsB,KAAKtB,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUJ,OAAQ2B,SAPf,6C,GAtBKM,IAAMC,WCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.52a7f789.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nconst Card = ({ email, name, id}) => {\n  return (\n    <div className=\"dib tc bg-light-green ma2 shadow-5 grow br3 bw2 pa3\">\n      <img src={`https://robohash.org/${id}`} alt=\"robot\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n  return (\n    <div>\n      {robots.map((user) => <Card key={user.id} id={user.id} name={user.name} email={user.email} /> )}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react'\n\nconst SearchBox = ({onSearchChange}) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        type=\"search\"\n        placeholder=\"search Robots\"\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        onChange={onSearchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react'\n\nfunction Scroll(props) {\n  return (\n    <div style={{ overflow: 'scroll', height: '800px', border: '5px solid black'}}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll;\n","import React from 'react';\nimport CardList from '../components/CardList';\n// import { robots } from './robots';\nimport SearchBox from '../components/SearchBox';\nimport './App.css'; \nimport Scroll from '../components/Scroll';\n\nclass App extends React.Component {\n  state = {\n    robots: [],\n    searchfield: ''\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((users) => this.setState({robots: users}))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) =>\n      robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    );\n    if (!robots.length) {\n      return <h1>Loading</h1>\n    }\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox onSearchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}